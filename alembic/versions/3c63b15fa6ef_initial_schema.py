"""initial schema

Revision ID: 3c63b15fa6ef
Revises: 
Create Date: 2025-08-13 15:02:20.954483

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3c63b15fa6ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('global_role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('team',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=64), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], name=op.f('fk_team_owner_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team'))
    )
    op.create_index(op.f('ix_team_code'), 'team', ['code'], unique=True)
    op.create_table('meeting',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('starts_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ends_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name=op.f('fk_meeting_team_id_team')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meeting'))
    )
    op.create_index(op.f('ix_meeting_team_id'), 'meeting', ['team_id'], unique=False)
    op.create_index('ix_meeting_team_time', 'meeting', ['team_id', 'starts_at', 'ends_at'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('open', 'in_progress', 'done', name='taskstatus'), nullable=False),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assignee_id'], ['user.id'], name=op.f('fk_task_assignee_id_user')),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_task_author_id_user')),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name=op.f('fk_task_team_id_team')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_task'))
    )
    op.create_index(op.f('ix_task_assignee_id'), 'task', ['assignee_id'], unique=False)
    op.create_index(op.f('ix_task_author_id'), 'task', ['author_id'], unique=False)
    op.create_index(op.f('ix_task_status'), 'task', ['status'], unique=False)
    op.create_index(op.f('ix_task_team_id'), 'task', ['team_id'], unique=False)
    op.create_index('ix_task_team_status_deadline', 'task', ['team_id', 'status', 'deadline'], unique=False)
    op.create_table('user_teams',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('role_in_team', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], name=op.f('fk_user_teams_team_id_team')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_teams_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'team_id', name=op.f('pk_user_teams'))
    )
    op.create_table('evaluation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('evaluator_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['evaluator_id'], ['user.id'], name=op.f('fk_evaluation_evaluator_id_user')),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_evaluation_task_id_task')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_evaluation')),
    sa.UniqueConstraint('task_id', 'evaluator_id', name='uq_evaluation_task_evaluator')
    )
    op.create_index(op.f('ix_evaluation_evaluator_id'), 'evaluation', ['evaluator_id'], unique=False)
    op.create_index(op.f('ix_evaluation_task_id'), 'evaluation', ['task_id'], unique=False)
    op.create_table('taskcomment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], name=op.f('fk_taskcomment_author_id_user')),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name=op.f('fk_taskcomment_task_id_task')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taskcomment'))
    )
    op.create_index(op.f('ix_taskcomment_author_id'), 'taskcomment', ['author_id'], unique=False)
    op.create_index(op.f('ix_taskcomment_task_id'), 'taskcomment', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_taskcomment_task_id'), table_name='taskcomment')
    op.drop_index(op.f('ix_taskcomment_author_id'), table_name='taskcomment')
    op.drop_table('taskcomment')
    op.drop_index(op.f('ix_evaluation_task_id'), table_name='evaluation')
    op.drop_index(op.f('ix_evaluation_evaluator_id'), table_name='evaluation')
    op.drop_table('evaluation')
    op.drop_table('user_teams')
    op.drop_index('ix_task_team_status_deadline', table_name='task')
    op.drop_index(op.f('ix_task_team_id'), table_name='task')
    op.drop_index(op.f('ix_task_status'), table_name='task')
    op.drop_index(op.f('ix_task_author_id'), table_name='task')
    op.drop_index(op.f('ix_task_assignee_id'), table_name='task')
    op.drop_table('task')
    op.drop_index('ix_meeting_team_time', table_name='meeting')
    op.drop_index(op.f('ix_meeting_team_id'), table_name='meeting')
    op.drop_table('meeting')
    op.drop_index(op.f('ix_team_code'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
